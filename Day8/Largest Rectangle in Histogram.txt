class Solution {
    public int largestRectangleArea(int[] heights) {
        int n =heights.length;
        int max_area=0;
        int []pse= new int[n];
        int []nse= new int[n];
        Stack<Integer> st = new Stack<>();
        for (int i=0;i<n;i++){
            pse[i]=-1;
            while(!st.isEmpty() && heights[st.peek()]>=heights[i]) st.pop();
            if(!st.isEmpty()) pse[i]=st.peek();
            st.push(i);
        }
        while(!st.isEmpty())st.pop();
        for(int i=n-1;i>=0;i--){
            nse[i]=n;
            while(!st.isEmpty() && heights[st.peek()]>=heights[i])st.pop();
            if(!st.isEmpty()) nse[i]=st.peek();
            st.push(i);
        }
        
        for(int i=0;i<n;i++){
            int area=heights[i]*(nse[i]-pse[i]-1);
            if(area>max_area) max_area=area;
        }
        return max_area;
    }
}