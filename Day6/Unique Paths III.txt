class Solution {
    public int uniquePathsIII(int[][] grid) {
        int count=0;
        int rows=grid.length;
        int col = grid[0].length;
        int sc=0;
        int sr=0;
        for(int i=0;i<rows;i++){
            for(int j=0;j<col;j++){
                if(grid[i][j]==0) count++;
                else if(grid[i][j]==1){
                    sr=i;
                    sc=j;
                }
            }
        }
        return totalWays(sr,sc,rows-1,col-1,grid,count);
    }
    public int totalWays(int sr, int sc, int er, int ec, int[][] grid, int count){
        if(sr<0 || sc<0 ||sc>ec || sr>er || grid[sr][sc]==-1) return 0;
        if(grid[sr][sc]==2 && count!=-1) return 0;

        if(grid[sr][sc]==2 && count==-1) return 1;
        grid[sr][sc]=-1;
        int ans=totalWays(sr+1,sc,er,ec,grid,count-1)+
                totalWays(sr,sc+1,er,ec,grid,count-1)+
                totalWays(sr-1,sc,er,ec,grid,count-1)+
                totalWays(sr,sc-1,er,ec,grid,count-1);
        grid[sr][sc]=0;
        return ans;
    }
}